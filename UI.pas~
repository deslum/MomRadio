unit UI;

interface

uses 
gtk2,gdk2,glib2,gdk2pixbuf;

const
titles:array[0..5] of ^gchar = ('Авторадио',				
				'Русское радио',
				'Радио Максимум',
				'Европа плюс',
				'Хит FM',
				'Юмор FM');


urls:array[0..5] of pgchar = ('http://77.73.90.46:1055/avtoradio',
				'http://radio.north.kz:8000/russian-128.m3u',
				'http://radio.north.kz:8000/rmaximum.m3u',
				'http://ep128server.streamr.ru:8030/ep128',
				'http://sradio.ru/stream/3.m3u',
				'http://89.20.132.26:8000/v5_1');

images:array[0..5] of pgchar = ('auto.jpg','rusradio.jpg','maximum.jpg','europa+.jpg','hit.jpg','ufm.jpg');


type
 xz = (PIXBUF_COL,TEXT_COL);

implementation

var
window, vbox,treeView, toolbar: pGtkWidget;
play,sep,about,quit:pGtkToolItem;
renderer:pGtkCellRenderer;
column:pGtkTreeViewColumn;
select:pGTKTreeSelection;
sel:pgchar;
ico:pGdkPixbuf;



function createModel():pGtkTreeModel;cdecl;
var
 pixbuf:pGdkPixbuf;
 iter:TGtkTreeIter;
 store:pGtkListStore;
 i:gint;
begin
 store:= gtk_list_store_new(2,GDK_TYPE_PIXBUF,G_TYPE_STRING);
 for i:=0 to 5 do begin
  pixbuf:=gdk_pixbuf_new_from_file(images[i],nil);
  gtk_list_store_append(store,@iter);
  gtk_list_store_set(store,@iter,PIXBUF_COL,pixbuf,TEXT_COL,titles[i],-1);
  gdk_pixbuf_unref(pixbuf);
 end;
 createModel:=GTK_TREE_MODEL(store);
end;








procedure selection_changed(select:pGtkTreeSelection);cdecl;
var
    treeView:pGtkTreeView;
    model:pGtkTreeModel;
    iter:TGtkTreeIter;
    n,m:string;
    active: ^gchar;
    i:0..5;
begin    
    treeView:= gtk_tree_selection_get_tree_view(select);
    model:= gtk_tree_view_get_model(treeView);
    gtk_tree_selection_get_selected(select, @model, @iter);
    gtk_tree_model_get(model, @iter,1, @active,-1);
    n:=active;
    for i:=0 to 5 do begin m:=titles[i];if (m=n) then sel:=urls[i];end;
end;




procedure show_about(widget:pGtkWidget;data:gpointer);cdecl;
var
dialog:pGTKWidget;
icon:pGdkPixbuf;
begin
  dialog:= gtk_about_dialog_new();
  icon:=gdk_pixbuf_new_from_file('icon.png',nil);
  gtk_about_dialog_set_logo(GTK_ABOUT_DIALOG(dialog),icon);
  gtk_about_dialog_set_name(GTK_ABOUT_DIALOG(dialog), 'MomRadio');
  gtk_about_dialog_set_version(GTK_ABOUT_DIALOG(dialog), '0.1'); 
  gtk_about_dialog_set_copyright(GTK_ABOUT_DIALOG(dialog), '(c) Yurij Bukatkin');
  gtk_about_dialog_set_comments(GTK_ABOUT_DIALOG(dialog), ' Russian simple radio tuner for PC. ');
  gtk_about_dialog_set_website(GTK_ABOUT_DIALOG(dialog), 'http://www.deslum.com/MomPlayer');
  gtk_about_dialog_set_translator_credits(GTK_ABOUT_DIALOG(dialog), 'Application icon designed by Madeliniz'+#13+
'License: CC Attribution Non-Commercial'+#13+'http://madeliniz.deviantart.com/'); 
  gtk_dialog_run(GTK_DIALOG (dialog));
  gtk_widget_destroy(dialog);
end;

procedure CreateUI();
begin
window := gtk_window_new(GTK_WINDOW_TOPLEVEL);
gtk_window_set_title(GTK_WINDOW(window),'MomRadio');
ico:=gdk_pixbuf_new_from_file('icon.png',nil);
gtk_window_set_icon(GTK_WINDOW(window),ico);
gtk_window_set_default_size(GTK_WINDOW(window),230,420);
gtk_window_set_type_hint(GTK_WINDOW(window),GDK_WINDOW_TYPE_HINT_DIALOG);

treeView:= gtk_tree_view_new_with_model(createModel());
renderer:=gtk_cell_renderer_pixbuf_new();
column:=gtk_tree_view_column_new_with_attributes('',renderer,'pixbuf',PIXBUF_COL,nil);
gtk_tree_view_append_column(GTK_TREE_VIEW(treeView),column);
renderer:=gtk_cell_renderer_text_new();
column:=gtk_tree_view_column_new_with_attributes('',renderer,'text',TEXT_COL,nil);
gtk_tree_view_append_column(GTK_TREE_VIEW(treeView),column);
vbox:= gtk_vbox_new(false,2);
gtk_container_add(GTK_CONTAINER(window),vbox);
toolbar:= gtk_toolbar_new();
gtk_toolbar_set_style(Gtk_Toolbar(toolbar),GTK_TOOLBAR_ICONS);

play:= gtk_tool_button_new_from_stock(GTK_STOCK_MEDIA_PLAY);
sep:= gtk_separator_tool_item_new();
about:= gtk_tool_button_new_from_stock(GTK_STOCK_DIALOG_INFO);
quit:= gtk_tool_button_new_from_stock(GTK_STOCK_QUIT);

gtk_toolbar_insert(GTK_TOOLBAR(toolbar),play,-1);
gtk_toolbar_insert(GTK_TOOLBAR(toolbar),sep,-1);
gtk_toolbar_insert(GTK_TOOLBAR(toolbar),about,-1);
gtk_toolbar_insert(GTK_TOOLBAR(toolbar),quit,-1);

gtk_box_pack_start(GTK_BOX(vbox),toolbar,false,false,1);
gtk_box_pack_start(GTK_BOX(vbox),treeview,true,true,2);
select:= gtk_tree_view_get_selection(GTK_TREE_VIEW(treeView));
gtk_widget_show_all(window);
end;
end.
